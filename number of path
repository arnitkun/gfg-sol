//determines number of paths that can be taken from top left to bottom right of a mxn matrix

#include <iostream>
using namespace std;

int numpath(int m,int n){
    int i,j;
    int arr[m][n];
    
    for(i = 0 ; i < m ; i++){
        arr[i][0] = 1;
    }
    for(j = 0 ; j < n ; j++){
        arr[0][j] = 1;
    }
    
    for(i = 1;i < m ;i++){
        for(j =1;j < n ;j++){
            arr[i][j] = arr[i-1][j] + arr[i][j-1];//+arr[i-1][j-1];
        }
    }
    return arr[m-1][n-1];
}

int main() 
{
    int  T, row, column, res;
    cin>>T;
    while(T){
        cin>>row;
        cin>>column;
        res = numpath(row, column);
        cout<<res<<endl;
        T--;
    } 
    return 0; 
} 
